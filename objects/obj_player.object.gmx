<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_rig</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_hitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///0. (Variables)

//Direction
dir = 90;

//Mini map
bkg_x = background_x[1];
bkg_y = background_y[1];

//Animation
image_speed = 0.15;

//Physic

  //Variables
  hspd = 0;
  vspd = 0;
  
  //Values
  hace = 0.4;
  hmin = 0.55;
  hmax = 1.6;
  hfri = 0.045;

//Life
hp = 10;
hit = 0;
hited = 0;

//Sprite
xscale = image_xscale;
image_xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///0. (Movement)

//Timing
hp -= 0.01;

//Self demage
if keyboard_check_pressed(ord('D')) and hit == 0 {hit = -60; image_index = 0; sprite_index = spr_player_banana_slip;}

//Normal
if (hit &gt;= 0) {

  //Ivunerability
  if hit &gt; 0 {
    
    //Timer
    hit--;
    
    //Alpha
    if (hit % 10 == 0)  {image_alpha = 1;} else
    if (hit % 5 == 0)   {image_alpha = 0;}
  } 
  
  //Hitble
  else {image_alpha = 1;}
  
  //Inputs
  dirx = keyboard_check(vk_right) - keyboard_check(vk_left);
  diry = keyboard_check(vk_down ) - keyboard_check(vk_up  );
  
  //Mini map
  background_x[1] = bkg_x - view_xview[0]/12;
  background_y[1] = bkg_y - view_yview[0]/12;
  
  //Move
  hspd = clamp(hspd + (hace * dirx),-hmax,hmax);
  vspd = clamp(vspd + (hace * diry),-hmax,hmax);
  
  //Friction
  if dirx == 0 {hspd = clamp(scr_friction(hspd,hfri), -hmin, +hmin);}
  if diry == 0 {vspd = clamp(scr_friction(vspd,hfri), -hmin, +hmin);}
  
  
  image_speed = 0.22;
  //Sprites
  if diry = -1 {sprite_index = spr_player_up;   dir = 90} else
  if diry = +1 {sprite_index = spr_player_dw;   dir = 270} else
  if dirx != 0 {sprite_index = spr_player_rig;  xscale = sign(dirx); dir = point_direction(0,0,dirx,0);} else {
    image_speed = 0.15;
  }
}

//Dano
else if (hit &lt; 0) {

  hited--;
  vspd = scr_friction(vspd,hfri);
  hspd = scr_friction(hspd,hfri);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///1. (Physics)

while place_meeting(x+hspd,y,obj_slope)       {y--;}
while place_meeting(x+hspd,y,obj_slope_down)  {y++;}

//Horizontal Solid collision
if place_meeting(x+hspd,y,obj_block)      {while !place_meeting(x+sign(hspd),y,obj_block)       {x += sign(hspd);} hspd = 0;}

//Vertical Solid collision
if place_meeting(x+hspd,y+vspd,obj_block) {while !place_meeting(x+hspd,y+sign(vspd),obj_block)  {y += sign(vspd);} vspd = 0;}

//Deslocation
x += hspd;
y += vspd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_student">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hit == 0) {
  
  //Timer
  hit = -60;
  
  //Speed
  vspd = 2;
  
  hspd = clamp(hspd,-hmin,hmin)
  
  //
  hited = 40;
  
  //Sprite
  sprite_index = spr_player_dw;
  image_index = 0;
  
  //Destroy banana
  other.ok = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_banana">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///0. (Demage)

if (hit == 0) {
  
  //Timer
  hit = -60;
  
  //Speed
  hspd = 0;
  vspd = 0;
  
  //Sprite
  sprite_index = spr_player_banana_slip;
  image_index = 0;
  
  //Destroy banana
  instance_destroy(other);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///0. (End demage)

if (hit &lt; 0 and hited &lt; 0) {

  //Active timer
  hit *= -1;
  
  //Reset sprite
  sprite_index = spr_player_rig;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///(Draw)

//Self sprite
  
  //Setting
  image_xscale = xscale;
  
    //Draw
    draw_self();
    
    //Chap√©u
    draw_sprite_ext(scr_sprite_direction(spr_bone_side,spr_bone_up,spr_bone_dw),image_index,x,y,xscale,1,0,c_white,1);
  
  //Reset
  image_xscale = 1;
  image_yscale = 1;

//Hp max
hp = clamp(hp,0,10);

//Times up
//if hp = 0 {room_restart();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="46">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
